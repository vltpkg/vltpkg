name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-main
  cancel-in-progress: true

jobs:
  detect-action:
    name: Detect Release Action
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.action.outputs.value }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get Commit Message
        id: message
        run: echo "value=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Determine Action
        id: action
        run: |
          if [[ "${{ startsWith(steps.message.outputs.value, 'Release v') }}" == "true" ]]; then
            echo "value=publish" >> $GITHUB_OUTPUT
          else
            echo "value=pr" >> $GITHUB_OUTPUT
          fi

  pr:
    name: Release PR
    runs-on: ubuntu-latest
    needs: detect-action
    if: needs.detect-action.outputs.action == 'pr'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          check-latest: true

      - name: Install dependencies
        run: pnpm install

      - name: Increment Version
        run: pnpm -F cli exec npm version prerelease --no-git-tag-version

      - name: Get Version Number
        id: version
        run: echo "value=$(jq -r .version ./src/vlt/package.json)" >> $GITHUB_OUTPUT

      - name: Create or Update PR
        id: pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.RELEASE_WORKFLOW_TOKEN }}
          branch: release
          title: 'Release v${{ steps.version.outputs.value }}'
          body: 'Merge this PR to release vlt@${{ steps.version.outputs.value }}'
          commit-message: 'Release v${{ steps.version.outputs.value }}'
          author: 'vltops <vltops@users.noreply.github.com>'
          committer: 'vltops <vltops@users.noreply.github.com>'
          labels: 'release'
          base: main

      - name: Pack
        run: pnpm run build:bundle --action=pack --outdir=build-tarballs

      - name: Upload JS Artifacts
        uses: actions/upload-artifact@v4
        id: build-tarballs
        with:
          compression-level: 0
          if-no-files-found: error
          path: build-tarballs/vlt-${{ steps.version.outputs.value }}.tgz

      - name: Pack Compiled
        run: pnpm run build:compile --action=pack --outdir=compile-tarballs

      - name: Upload Compiled Artifacts
        uses: actions/upload-artifact@v4
        id: compile-tarballs
        with:
          compression-level: 0
          if-no-files-found: error
          path: compile-tarballs/vlt-*.tgz

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: comment
        with:
          issue-number: ${{ steps.pr.outputs.pull-request-number }}
          comment-author: 'vltops'
          body-includes: |
            ## Release Tarballs

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.RELEASE_WORKFLOW_TOKEN }}
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ steps.pr.outputs.pull-request-number  }}
          body: |
            ## Release Tarballs
            - Bundled tarball: ${{ steps.build-tarballs.outputs.artifact-url }}
            - Compiled tarballs: ${{ steps.compile-tarballs.outputs.artifact-url }}
          edit-mode: replace

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: detect-action
    if: needs.detect-action.outputs.action == 'publish'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          check-latest: true

      - name: Install dependencies
        run: pnpm install

      - name: Publish
        run: pnpm run build:bundle --action=publish ${{ github.event_name == 'push' && '--forReal' || '' }}
        env:
          VLT_CLI_PUBLISH_TOKEN: ${{ secrets.VLT_CLI_PUBLISH_TOKEN }}

      - name: Publish Compiled
        run: pnpm run build:compile --action=publish --platform=all --arch=all ${{ github.event_name == 'push' && '--forReal' || '' }}
        env:
          VLT_CLI_PUBLISH_TOKEN: ${{ secrets.VLT_CLI_PUBLISH_TOKEN }}
