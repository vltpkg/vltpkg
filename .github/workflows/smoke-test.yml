name: Smoke Test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      full-matrix:
        description: 'Whether to run the full matrix of environments for testing.'
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-check:
    name: Pre-Check
    runs-on: ubuntu-latest
    outputs:
      release-pr: ${{ steps.release-pr.outputs.value }}
      full-matrix: ${{ steps.full-matrix.outputs.value }}
    steps:
      - name: Release PR
        id: release-pr
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.head_ref }}" == "release" ]]; then
            echo "value=true" >> "$GITHUB_OUTPUT"
          else
            echo "value=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Matrix
        id: full-matrix
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [[
            "${{ github.event_name }}" == "push" ||
            "${{ steps.release-pr.outputs.value }}" == "true" ||
            "${{ inputs.full-matrix }}" == "true"
          ]]; then
            echo "value=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [[
            "${{ github.event_name }}" == "pull_request" &&
            "$PR_TITLE" == *"[ci full-matrix]"*
          ]]; then
            echo "value=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "value=false" >> "$GITHUB_OUTPUT"


  test:
    name: Test - ${{ matrix.platform.name }} - ${{ matrix.node-version }}
    needs: pre-check
    runs-on: ${{ matrix.platform.os }}
    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    strategy:
      matrix:
        node-version: [22.x, 24.x]
        platform:
          - name: Ubuntu
            os: ubuntu-latest
            shell: bash
          - name: macOS
            os: macos-latest
            shell: bash
          - name: macOS Intel
            os: macos-13
            shell: bash
          - name: Windows
            os: windows-latest
            shell: bash
          - name: Windows Powershell
            os: windows-latest
            shell: powershell
        exclude:
          - node-version: '24.x'
          - platform: ${{ fromJSON(needs.pre-check.outputs.full-matrix == 'false' && '{"name":"macOS","os":"macos-latest","shell":"bash"}') }}
          - platform: ${{ fromJSON(needs.pre-check.outputs.full-matrix == 'false' && '{"name":"macOS Intel","os":"macos-13","shell":"bash"}') }}
          - platform: ${{ fromJSON(needs.pre-check.outputs.full-matrix == 'false' && '{"name":"Windows Powershell","os":"windows-latest","shell":"powershell"}') }}
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Use Nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          check-latest: true

      - name: Install Dependencies
        run: pnpm --filter="...smoke-test..." install --ignore-scripts

      - name: Build Native Dependencies
        if: runner.os != 'Windows'
        run: pnpm --filter="smoke-test" rebuild node-pty

      - name: Prepare
        run: pnpm --filter="...smoke-test..." prepare

      - name: Run Tests
        run: pnpm --filter=smoke-test test
        env:
          # The smoke tests can be flaky in CI when run in parallel. The issue
          # with flakes when running in parallel could point to a real bug so
          # future investigation might be needed if we see problems in usage.
          # For now, we will run the smoke tests in a single job to avoid flakes
          # and ensure consistent results.
          TAP_JOBS: 1

  on-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    if: ${{ always() && needs.pre-check.outputs.release-pr == 'true' && needs.test.result == 'failure' }}
    needs:
      - pre-check
      - test
    steps:
      - name: Slack Notify
        uses: rtCamp/action-slack-notify@v2.3.3
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_GITHUB_ALERTS_WEBHOOK_URL }}
          SLACK_USERNAME: vltops
          SLACK_CHANNEL: github-alerts
          SLACK_ICON: https://github.com/vltpkg.png
          SLACK_COLOR: failure
          SLACK_FOOTER: ''
          SLACKIFY_MARKDOWN: true
          MSG_MINIMAL: 'actions url,commit'
          SLACK_TITLE: ${{ github.event.pull_request.title }} Smoke Test Failed
          SLACK_MESSAGE: |
            [PR ${{ github.event.number }}](https://github.com/${{ github.repository }}/pull/${{ github.event.number }})
            Smoke Test: ${{ needs.test.result == 'failure' && ':x:' || ':white_check_mark:' }}
