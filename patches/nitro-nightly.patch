diff --git a/dist/runtime/internal/cache.mjs b/dist/runtime/internal/cache.mjs
index 7b3265de048214b2aa34252716438d1320eed08c..6279ade5c2f5db0c863cd35764db36c20faad16f 100644
--- a/dist/runtime/internal/cache.mjs
+++ b/dist/runtime/internal/cache.mjs
@@ -179,7 +179,11 @@ export function defineCachedEventHandler(handler, opts = defaultCacheOptions())
       }
       const rawValue = await handler(event);
       const res = await toResponse(rawValue, event);
-      const body = await res.text();
+      const contentType = res.headers.get('content-type') || '';
+      const isBinary = !contentType.startsWith('text/') && !contentType.includes('json') && !contentType.includes('xml');
+      const body = isBinary 
+        ? Array.from(new Uint8Array(await res.arrayBuffer()))
+        : await res.text();
       if (!res.headers.has("etag")) {
         res.headers.set("etag", `W/"${hash(body)}"`);
       }
@@ -206,7 +210,8 @@ export function defineCachedEventHandler(handler, opts = defaultCacheOptions())
         status: res.status,
         statusText: res.statusText,
         headers: Object.fromEntries(res.headers.entries()),
-        body
+        body,
+        isBinary,
       };
       return cacheEntry;
     },
@@ -227,7 +232,10 @@ export function defineCachedEventHandler(handler, opts = defaultCacheOptions())
     })) {
       return;
     }
-    return new FastResponse(response.body, {
+    const responseBody = response.isBinary 
+      ? new Uint8Array(response.body).buffer
+      : response.body;
+    return new FastResponse(responseBody, {
       status: response.status,
       statusText: response.statusText,
       headers: response.headers
