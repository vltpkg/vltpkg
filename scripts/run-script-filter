#!/usr/bin/env bash

set -eo pipefail

function exit_with_output() {
  local PREPARE="$1"
  local TEST="${2:-$1}"

  echo "Example commands:"
  echo "pnpm $PREPARE prepare"
  echo "pnpm $TEST test"

  if [ ! -z "${GITHUB_OUTPUT}" ]; then
    echo "prepare=$PREPARE" >> "$GITHUB_OUTPUT"
    echo "test=$TEST" >> "$GITHUB_OUTPUT"
  fi

  exit 0
}

function has_changes() {
  set +e
  pnpm --fail-if-no-match --shell-mode $1 $2 exec true
  STATUS=$?
  set -e
  return $STATUS
}

if [ "$1" == "pull_request" ]; then
  FILTER="[origin/$2]"
  FILTER_FLAG="--filter"
elif [ "$1" == "workflow_dispatch" ] && [ "$2" != "" ]; then
  FILTER="$2"
  FILTER_FLAG="--filter"
else
  exit_with_output "--recursive"
fi

# see if the passed in filter args result in any changed workspaces
# if so, then return those to be run
FILTER_PREPARE="...$FILTER..."
FILTER_TEST="...$FILTER"
if has_changes $FILTER_FLAG $FILTER_TEST; then
  echo "Workspaces to install/prepare:"
  pnpm --shell-mode $FILTER_FLAG $FILTER_PREPARE exec echo "  - \$PNPM_PACKAGE_NAME"
  echo "Workspaces to test:"
  pnpm --shell-mode $FILTER_FLAG $FILTER_TEST exec echo "  - \$PNPM_PACKAGE_NAME"
  exit_with_output "$FILTER_FLAG=\"$FILTER_PREPARE\"" "$FILTER_FLAG=\"$FILTER_TEST\""
fi

echo "Found no workspace changes"

# no workspaces changes, so look for some special files that mean run everything
CHANGED_FILES=($(git diff HEAD "${FILTER//[\[\]]/}" --name-only))
RUN_ALL_FILES=("pnpm-lock.yaml" "pnpm-workspace.yaml")

echo "Checking changed files"
for file in "${CHANGED_FILES[@]}"; do
  if [[ " ${RUN_ALL_FILES[@]} " =~ " ${file} " ]]; then
    echo "Found ${file} in changed files. Running all workspaces"
    exit_with_output "--recursive"
  fi
done

echo "Found no changes"
echo "Filters: '$FILTER_FLAG $FILTER'"
echo "Changed files: '${CHANGED_FILES[@]}'"
