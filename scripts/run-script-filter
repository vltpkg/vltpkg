#!/usr/bin/env bash

set -eo pipefail

function output() {
  local PREPARE="$1"
  local TEST="${2:-$1}"

  echo "Example commands:"
  echo "pnpm $PREPARE prepare"
  echo "pnpm $TEST test"

  if [ ! -z "${GITHUB_OUTPUT}" ]; then
    echo "prepare=$PREPARE" >> "$GITHUB_OUTPUT"
    echo "test=$TEST" >> "$GITHUB_OUTPUT"
  fi
  
  exit 0
}

function has_changes() {
  set +e
  pnpm --fail-if-no-match --shell-mode $1 $2 exec true
  STATUS=$?
  set -e
  return $STATUS
}

if [ "$1" == "pull_request" ]; then
  FILTER="[origin/$2]"
  FILTER_FLAG="--filter-prod"
elif [ "$1" == "workflow_dispatch" ] && [ "$2" != "" ]; then
  FILTER="$2"
  FILTER_FLAG="--filter"
else
  output "--recursive"
fi

FILTER_PREPARE="...$FILTER..."
FILTER_TEST="...$FILTER"
if has_changes $FILTER_FLAG $FILTER_TEST; then
  echo "Workspaces to install/prepare:"
  pnpm --shell-mode $FILTER_FLAG $FILTER_PREPARE exec echo "  - \$PNPM_PACKAGE_NAME"
  echo "Workspaces to test:"
  pnpm --shell-mode $FILTER_FLAG $FILTER_TEST exec echo "  - \$PNPM_PACKAGE_NAME"
  output "$FILTER_FLAG=\"$FILTER_PREPARE\"" "$FILTER_FLAG=\"$FILTER_TEST\""
else
  echo "Found no changes based on $FILTER_ARG $FILTER"
fi
