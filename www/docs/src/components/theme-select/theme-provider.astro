{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
  const getThemePreference = () => {
    if (
      typeof localStorage !== 'undefined' &&
      localStorage.getItem('theme')
    ) {
      return localStorage.getItem('theme')
    }
    return 'system'
  }

  const applyTheme = theme => {
    let resolvedTheme = theme
    if (theme === 'system') {
      resolvedTheme =
        window.matchMedia('(prefers-color-scheme: dark)').matches ?
          'dark'
        : 'light'
    }
    /** data-theme is the resolved theme utilized by tailwind */
    document.documentElement.setAttribute('data-theme', resolvedTheme)

    /** data-theme-preference is the users preference */
    document.documentElement.setAttribute(
      'data-theme-preference',
      theme,
    )
  }

  const theme = getThemePreference()
  applyTheme(theme)

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const currentTheme = document.documentElement.getAttribute(
        'data-theme-preference',
      )
      localStorage.setItem('theme', currentTheme)
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['data-theme-preference'],
    })
  }
</script>
